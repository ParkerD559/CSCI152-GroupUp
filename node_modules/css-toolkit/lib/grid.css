:root {
  --row-gutter-size: 1.25rem;
}

/* CSS Toolkit - grid */

/*
 * DO NOT apply dimension or offset utilities to the `row` element. All  widths
 * and offsets should be applied to the child `column`.
 */

/*
 * Grid container
 *
 * All content must be contained within child `column` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 */

.row {
  box-sizing: border-box;
  display: flex; /* 1 */
  flex-flow: row wrap;
  margin: 0; /* 1 */
  padding: 0; /* 1 */
  list-style: none; /* 1 */
}

/*
 * Modifier: center align all row columns
 */

.row-align-center {
  justify-content: center;
}

/*
 * Modifier: right align all row columns
 */

.row-align-right {
  justify-content: flex-end;
}

/*
 * Modifier: middle-align row columns
 */

.row-align-middle {
  align-items: center;
}

/*
 * Modifier: bottom-align row columns
 */

.row-align-bottom {
  align-items: flex-end;
}

/*
 * Modifier: allow columns to equal distribute width
 *
 * Provide all values to avoid IE10 bug with shorthand flex - http://git.io/vllC7
 * Use `0%` to avoid bug in IE10/11 with unitless flex basis - http://git.io/vllWx
 */

.row-fit > .column {
  flex: 1 1 0%;
}

/*
 * Modifier: all columns to match height of tallest column in a row
 */

.row-equal-height > .column {
  display: flex;
}

/*
 * Modifier: gutters
 */

.row-gutters {
  margin-left: calc(-1 * var(--row-gutter-size));
}

.row-gutters > .column {
  padding-left: var(--row-gutter-size);
}

/*
 * Grid column
 *
 * No explicit width by default. Rely on combining `column` with a dimension
 * size or a class that extends 'row'.
 *
 * 1. Set flex items to full width by default.
 */

.column {
  box-sizing: inherit;
  flex: 0 0 100%; /* 1 */
}
